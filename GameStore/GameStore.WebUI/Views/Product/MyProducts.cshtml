@model GameStore.WebUI.Areas.Admin.Models.ProductViewModel
@{ ViewBag.Title = "My Products"; }

<h2>@ViewBag.Title</h2>

@Scripts.Render("~/Content/Product")

<div class="row">
    <div style="float:left; padding-left:15px">
        <button type="button" class="btn btn-info btn-md" data-toggle="modal" data-target="#AddModal">Add Product</button>
    </div>
    <div style="float:right; padding-right:15px">
        <form class="form-inline" role="form">
            <div class="form-group">
                <label for="categoryFilter">Category:</label>
                @Html.DropDownListFor(o => o.CategoryId, new SelectList(ViewBag.CategoryFilter, "CategoryId", "CategoryName"), new { @id = "categoryFilter", @name = "categoryFilter", @class = "form-control" })
            </div>
        </form>
    </div>
</div>
<hr />
<table class="table table-striped" id="modelList">
    <thead>
        <tr>
            <th>Product Id</th>
            <th>Product Name</th>
            <th>Category</th>
            <th>Price</th>
            <th>Image</th>
            <th>Condition</th>
            <th>Discount</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<div id="AddModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        @using (Ajax.BeginForm("", new { controller = "api/Product/Create" }, new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", OnFailure = "onFailure" }, new { enctype = "multipart/form-data" }))
        {
@Html.AntiForgeryToken();
<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Add New Product</h4>
    </div>
    <div class="modal-body">
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <fieldset class="form-group">
            @Html.LabelFor(p => p.ProductName)
            @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control" })
        </fieldset>
        <fieldset class="form-group">
            @Html.LabelFor(p => p.CategoryId)
            @Html.DropDownListFor(o => o.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), new { @class = "form-control" })
        </fieldset>
        <fieldset class="form-group">
            @Html.LabelFor(p => p.Price)
            @Html.TextBoxFor(p => p.Price, new { @class = "form-control" })
        </fieldset>

        <fieldset class="form-group">
            @Html.LabelFor(p => p.Image)
            @Html.TextBoxFor(p => p.Image, new { @class = "form-control" })
        </fieldset>
        <fieldset class="form-group">
            @Html.LabelFor(p => p.Condition)
            @Html.TextBoxFor(p => p.Condition, new { @class = "form-control" })
        </fieldset>
        <fieldset class="form-group">
            @Html.LabelFor(p => p.Discount)
            @Html.TextBoxFor(p => p.Discount, new { @class = "form-control" })
        </fieldset>
    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary pull-left">Submit</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>
</div>}
    </div>
</div>

<div id="EditModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        @using (Ajax.BeginForm("", "api/Product/", new AjaxOptions { HttpMethod = "Post", OnSuccess = "onSuccess", OnFailure = "onFailure" }))
        {
@Html.AntiForgeryToken()
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Edit Category</h4>
                    </div>
                    <div class="modal-body">
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                        @Html.HiddenFor(p => p.ProductId)
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.ProductName)
                            @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control" })
                        </fieldset>
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.CategoryId)
                            @Html.DropDownListFor(o => o.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), new { @class = "form-control" })
                        </fieldset>
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.Price)
                            @Html.TextBoxFor(p => p.Price, new { @class = "form-control" })
                        </fieldset>
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.Image)
                            @Html.TextBoxFor(p => p.Image, new { @class = "form-control" })
                        </fieldset>
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.Condition)
                            @Html.TextBoxFor(p => p.Condition, new { @class = "form-control" })
                        </fieldset>
                        <fieldset class="form-group">
                            @Html.LabelFor(p => p.Discount)
                            @Html.TextBoxFor(p => p.Discount, new { @class = "form-control" })
                        </fieldset>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary pull-left">Update</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>}
    </div>
</div>

